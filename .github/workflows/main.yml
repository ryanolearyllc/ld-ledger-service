# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths: 'postman/schemas/schema.yaml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - name: Swagger Codegen
        # You may pin to the exact commit or the version.
        # uses: bjerkio/swagger-codegen-action@22db9a73c06c0523d341a4a32e4e15facd0d34e4
        uses: ducksify/swagger-codegen-action@v3.0
        with:
          # Arguments
          args: generate -l typescript-angular -i postman/schemas/schema.yaml -c options-ledger.json

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          always-auth: true

      - name: Install deps
        run: npm install
        
      - name: Remove out-of-date files
        run: |
          rm -rf node_modules/@types/node/assert.d.ts
        
      - name: Git config
        run: |
          git config --global user.name "LD Devops Automation"
          git config --global user.email "support@livedatatechnologies.com"
          
      - name: Get next NPM package version
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}        
          echo "npm_pkg_ver=`npm view @roleary-ldt/ledger-service-api dist-tags.latest | awk '{split($0,a,".");print a[1]"."a[2]"."a[3]+1}'`" >> $GITHUB_ENV
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Bump NPM package version
        run: |
          npm version --force --no-commit-hooks ${{env.npm_pkg_ver}} 

      - name: Build NPM
        run: npm run build

      - name: Publish NPM package
        run: npm publish dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Push version tag
        run: |
          git tag -a ${{env.npm_pkg_ver}} -m "NPM package version ${{env.npm_pkg_ver}}"
          git push origin ${{env.npm_pkg_ver}}
          

